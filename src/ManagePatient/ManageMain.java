/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ManagePatient;
import Main.EncryptDecrypt;
import NewPatient.Complaints;
import NewPatient.Controller;
import NewPatient.Diagnose;
import NewPatient.Ear;
import NewPatient.Joint;
import NewPatient.MedicalHistory;
import NewPatient.PersonalDatas;
import NewPatient.PsychologicalAnamnesis;
import NewPatient.Questions;
import NewPatient.Tongue;
import NewPatient.ManualTherapy;
import com.itextpdf.io.font.TrueTypeFont;
import com.itextpdf.kernel.pdf.PdfName;
//import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.styledxmlparser.jsoup.Jsoup;
import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

//pdfbox
//import java.io.IOException;
//import org.apache.fontbox.encoding.Encoding;
//import org.apache.pdfbox.pdmodel.PDDocument;
//import org.apache.pdfbox.pdmodel.PDPage;
//import org.apache.pdfbox.pdmodel.PDPageContentStream;
//import org.apache.pdfbox.pdmodel.font.PDType1Font;
//import org.apache.pdfbox.pdmodel.font.PDTrueTypeFont;
//import org.apache.pdfbox.util.Charsets;

////////////

//iText
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import static com.itextpdf.text.pdf.PdfDictionary.FONT;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfWriter;
//import com.itextpdf.text.Image;
import com.itextpdf.text.html.HtmlEncoder;

import java.io.FileOutputStream;
import static java.nio.file.Files.lines;
import com.itextpdf.text.pdf.PdfPTable;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;








/**
 *
 * @author robeszpierre
 */
public class ManageMain extends javax.swing.JFrame {
    
    ArrayList<Treatment> treatments=new ArrayList<Treatment>();
    ArrayList<Treatment> treatments2=new ArrayList<Treatment>();
    int idx=0;
    
    int idNumber;
    
    
    /**
     * Creates new form ManageMain
     */
    public ManageMain(int id) throws Exception {
        this.setVisible(true);
        this.idNumber = id;
        String path=Controller.controller.path + idNumber + File.separatorChar;
        initComponents(); 
        myInitComponents(path);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        loadPersonalData(path);
        loadSymptoms(path);
        loadMedicalHistory(path);
        loadComplaints(path);  
        loadAnamnezis(path);
        loadPulse(path);
        loadDiagnose(path);
        loadTreatments(path);
        loadFinalReport(path);
        loadTongue(path);
        loadEar(path);
        loadManualTherapy(path);

        Controller.controller.treatmentInProgress++;
        String debugStat=jComboBox1.getSelectedItem().toString();
        if(debugStat.equals("────────")){
             Controller.controller.treatmentInProgress--;
        }else if(debugStat.equals("gyógyult")){
             Controller.controller.healed--;
        }else if(debugStat.equals("részben gyógyult")){
             Controller.controller.partiallyHealed--;
        }else if(debugStat.equals("nem gyógyult")){
             Controller.controller.notHealed--;
        }else if(debugStat.equals("egyéb")){
             Controller.controller.other--;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jList9 = new javax.swing.JList<>();
        jScrollPane10 = new javax.swing.JScrollPane();
        jList10 = new javax.swing.JList<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        jList11 = new javax.swing.JList<>();
        jScrollPane12 = new javax.swing.JScrollPane();
        jList12 = new javax.swing.JList<>();
        jScrollPane13 = new javax.swing.JScrollPane();
        jList13 = new javax.swing.JList<>();
        jScrollPane14 = new javax.swing.JScrollPane();
        jList14 = new javax.swing.JList<>();
        jScrollPane15 = new javax.swing.JScrollPane();
        jList15 = new javax.swing.JList<>();
        jScrollPane16 = new javax.swing.JScrollPane();
        jList16 = new javax.swing.JList<>();
        jScrollPane17 = new javax.swing.JScrollPane();
        jList17 = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();
        jLabel63 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane18 = new javax.swing.JScrollPane();
        jList18 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jButton13 = new javax.swing.JButton();
        jScrollPane32 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jScrollPane19 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTextPane9 = new javax.swing.JTextPane();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextPane10 = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane22 = new javax.swing.JScrollPane();
        jTextPane11 = new javax.swing.JTextPane();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane23 = new javax.swing.JScrollPane();
        jTextPane12 = new javax.swing.JTextPane();
        jScrollPane24 = new javax.swing.JScrollPane();
        jTextPane13 = new javax.swing.JTextPane();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane25 = new javax.swing.JScrollPane();
        jTextPane14 = new javax.swing.JTextPane();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane26 = new javax.swing.JScrollPane();
        jTextPane15 = new javax.swing.JTextPane();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel69 = new javax.swing.JLabel();
        jScrollPane33 = new javax.swing.JScrollPane();
        jTextPane17 = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane31 = new javax.swing.JScrollPane();
        jPanel12 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel66 = new javax.swing.JLabel();
        jScrollPane27 = new javax.swing.JScrollPane();
        jTextPane7 = new javax.swing.JTextPane();
        jLabel67 = new javax.swing.JLabel();
        jScrollPane28 = new javax.swing.JScrollPane();
        jTextPane8 = new javax.swing.JTextPane();
        jLabel68 = new javax.swing.JLabel();
        jScrollPane29 = new javax.swing.JScrollPane();
        jTextPane16 = new javax.swing.JTextPane();
        jButton8 = new javax.swing.JButton();
        jScrollPane56 = new javax.swing.JScrollPane();
        jPanel14 = new javax.swing.JPanel();
        jLabel87 = new javax.swing.JLabel();
        jScrollPane57 = new javax.swing.JScrollPane();
        jTextPane40 = new javax.swing.JTextPane();
        jScrollPane58 = new javax.swing.JScrollPane();
        jTextPane41 = new javax.swing.JTextPane();
        jLabel88 = new javax.swing.JLabel();
        jScrollPane59 = new javax.swing.JScrollPane();
        jTextPane42 = new javax.swing.JTextPane();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jScrollPane60 = new javax.swing.JScrollPane();
        jTextPane43 = new javax.swing.JTextPane();
        jLabel91 = new javax.swing.JLabel();
        jScrollPane61 = new javax.swing.JScrollPane();
        jTextPane44 = new javax.swing.JTextPane();
        jLabel92 = new javax.swing.JLabel();
        jScrollPane62 = new javax.swing.JScrollPane();
        jTextPane45 = new javax.swing.JTextPane();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jScrollPane63 = new javax.swing.JScrollPane();
        jTextPane46 = new javax.swing.JTextPane();
        jButton10 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane5 = new javax.swing.JTextPane();
        jButton6 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane6 = new javax.swing.JTextPane();
        jButton7 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jScrollPane30 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel61 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane35 = new javax.swing.JScrollPane();
        jTextPane18 = new javax.swing.JTextPane();
        jButton15 = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel64 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Betegek kezelése");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 740));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jList9.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jList9.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jList9.setOpaque(false);
        jList9.setVisibleRowCount(4);
        jScrollPane9.setViewportView(jList9);

        jPanel2.add(jScrollPane9);
        jScrollPane9.setBounds(310, 350, 340, 110);

        jList10.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jList10.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList10.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jList10.setOpaque(false);
        jList10.setVisibleRowCount(5);
        jScrollPane10.setViewportView(jList10);

        jPanel2.add(jScrollPane10);
        jScrollPane10.setBounds(310, 0, 340, 125);

        jList11.setFont(new java.awt.Font("FreeSans", 1, 14)); // NOI18N
        jList11.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList11.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jList11.setOpaque(false);
        jList11.setVisibleRowCount(5);
        jScrollPane11.setViewportView(jList11);

        jPanel2.add(jScrollPane11);
        jScrollPane11.setBounds(0, 0, 310, 125);

        jList12.setFont(new java.awt.Font("FreeSans", 1, 14)); // NOI18N
        jList12.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList12.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jList12.setOpaque(false);
        jList12.setVisibleRowCount(4);
        jScrollPane12.setViewportView(jList12);

        jPanel2.add(jScrollPane12);
        jScrollPane12.setBounds(0, 120, 310, 105);

        jList13.setFont(new java.awt.Font("FreeSans", 1, 14)); // NOI18N
        jList13.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jList13.setOpaque(false);
        jList13.setVisibleRowCount(5);
        jScrollPane13.setViewportView(jList13);

        jPanel2.add(jScrollPane13);
        jScrollPane13.setBounds(0, 222, 310, 125);

        jList14.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jList14.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList14.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        jList14.setOpaque(false);
        jList14.setVisibleRowCount(4);
        jScrollPane14.setViewportView(jList14);

        jPanel2.add(jScrollPane14);
        jScrollPane14.setBounds(310, 120, 340, 105);

        jList15.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jList15.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jList15.setOpaque(false);
        jList15.setVisibleRowCount(5);
        jScrollPane15.setViewportView(jList15);

        jPanel2.add(jScrollPane15);
        jScrollPane15.setBounds(310, 222, 340, 125);

        jList16.setFont(new java.awt.Font("FreeSans", 1, 14)); // NOI18N
        jList16.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jList16.setOpaque(false);
        jList16.setVisibleRowCount(4);
        jScrollPane16.setViewportView(jList16);

        jPanel2.add(jScrollPane16);
        jScrollPane16.setBounds(0, 350, 310, 110);

        jScrollPane17.setBackground(new java.awt.Color(111, 111, 111));

        jList17.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jList17.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jList17.setOpaque(false);
        jList17.setVisibleRowCount(10);
        jScrollPane17.setViewportView(jList17);

        jPanel2.add(jScrollPane17);
        jScrollPane17.setBounds(0, 460, 310, 220);

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Tünetmódosítás");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(40, 700, 200, 30);

        jLabel63.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel63.setText("Gerinc");
        jPanel2.add(jLabel63);
        jLabel63.setBounds(120, 680, 70, 20);

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        jList18.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jList18.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jList18.setOpaque(false);
        jScrollPane18.setViewportView(jList18);

        jTabbedPane2.addTab("izület 1", jScrollPane18);

        jPanel2.add(jTabbedPane2);
        jTabbedPane2.setBounds(316, 460, 334, 250);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ManagePatient/body3.jpg"))); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(0, 0, 650, 680);

        jLabel70.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel70.setText("Végtagok");
        jPanel2.add(jLabel70);
        jLabel70.setBounds(430, 710, 70, 20);

        jTabbedPane1.addTab("Tünetek", jPanel2);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea7.setEditable(false);
        jTextArea7.setColumns(20);
        jTextArea7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextArea7.setRows(5);
        jScrollPane7.setViewportView(jTextArea7);

        jButton13.setBackground(new java.awt.Color(0, 0, 0));
        jButton13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setText("Adatok módosítása");
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(222, 222, 222))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(205, 205, 205))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Adatok", jPanel3);

        jScrollPane32.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel58.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel58.setText("Magzati kor, születés körüli időszak");

        jLabel59.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel59.setText("Gyermekkor");

        jLabel60.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel60.setText("Felnőtt kor ill. a jelenleg fennálló helyzet");

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Adatok módosítása");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jScrollPane2.setBorder(null);

        jTextPane2.setEditable(false);
        jTextPane2.setBorder(null);
        jTextPane2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(jTextPane2);

        jScrollPane3.setBorder(null);

        jTextPane3.setEditable(false);
        jTextPane3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(jTextPane3);

        jScrollPane4.setBorder(null);

        jTextPane4.setEditable(false);
        jTextPane4.setBorder(null);
        jTextPane4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane4.setViewportView(jTextPane4);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel58)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel59)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel60))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 68, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel58)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel59)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel60)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane32.setViewportView(jPanel6);

        jTabbedPane1.addTab("Pszichikum", jScrollPane32);

        jScrollPane19.setHorizontalScrollBar(null);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel10.setText("Gyermekkori nagyobb betegség(ek)");

        jScrollPane20.setBorder(null);

        jTextPane9.setEditable(false);
        jTextPane9.setBorder(null);
        jTextPane9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane20.setViewportView(jTextPane9);

        jScrollPane21.setBorder(null);

        jTextPane10.setEditable(false);
        jTextPane10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane21.setViewportView(jTextPane10);

        jLabel11.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel11.setText("Előző betegség(ek)");

        jScrollPane22.setBorder(null);

        jTextPane11.setEditable(false);
        jTextPane11.setBorder(null);
        jTextPane11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane22.setViewportView(jTextPane11);

        jLabel12.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel12.setText("Ismert, jelenleg is fennálló betegség(ek)");

        jLabel13.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel13.setText("Műtét(ek)");

        jScrollPane23.setBorder(null);

        jTextPane12.setEditable(false);
        jTextPane12.setBorder(null);
        jTextPane12.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane23.setViewportView(jTextPane12);

        jScrollPane24.setBorder(null);

        jTextPane13.setEditable(false);
        jTextPane13.setBorder(null);
        jTextPane13.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane24.setViewportView(jTextPane13);

        jLabel14.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel14.setText("Nagyobb fogászati beavatkozás(ok)");

        jScrollPane25.setBorder(null);

        jTextPane14.setEditable(false);
        jTextPane14.setBorder(null);
        jTextPane14.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane25.setViewportView(jTextPane14);

        jLabel15.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel15.setText("Jelenleg szedett gyógyszer(ek), gyógynövény(ek)");

        jScrollPane26.setBorder(null);

        jTextPane15.setEditable(false);
        jTextPane15.setBorder(null);
        jTextPane15.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane26.setViewportView(jTextPane15);

        jLabel16.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel16.setText("Korábbi terhesség(ek)");

        jLabel17.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel17.setText("Jelenleg állapotos-e");

        jButton9.setBackground(new java.awt.Color(0, 0, 0));
        jButton9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Adatok módosítása");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });

        jLabel69.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel69.setText("Gyógyszerérzékenyésg");

        jScrollPane33.setBorder(null);

        jTextPane17.setEditable(false);
        jTextPane17.setBorder(null);
        jTextPane17.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane33.setViewportView(jTextPane17);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("állapotose");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel10))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel11))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel12))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel13))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel15))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane33, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(215, 215, 215)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel69)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addContainerGap(599, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel69)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel2))
                .addGap(67, 67, 67)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );

        jScrollPane19.setViewportView(jPanel7);

        jTabbedPane1.addTab("Kórtörténet", jScrollPane19);

        jScrollPane31.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel65.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel65.setText("Nyugati orvosi diagnózis(ok)");

        jScrollPane1.setBorder(null);

        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(jTextPane1);

        jLabel66.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel66.setText("Jelen panaszok");

        jScrollPane27.setBorder(null);

        jTextPane7.setEditable(false);
        jTextPane7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane27.setViewportView(jTextPane7);

        jLabel67.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel67.setText("Laborvizsgálat(ok) eredményei");

        jScrollPane28.setBorder(null);

        jTextPane8.setEditable(false);
        jTextPane8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane28.setViewportView(jTextPane8);

        jLabel68.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel68.setText("Képalkotó vizsgálat(ok)");

        jScrollPane29.setBorder(null);

        jTextPane16.setEditable(false);
        jTextPane16.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane29.setViewportView(jTextPane16);

        jButton8.setBackground(new java.awt.Color(0, 0, 0));
        jButton8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Adatok módosítása");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel65)
                            .addComponent(jLabel68)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane29, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel66)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane27, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane28, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel67))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(567, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel65)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addComponent(jLabel66)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane27)
                .addGap(18, 18, 18)
                .addComponent(jLabel67)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane28)
                .addGap(18, 18, 18)
                .addComponent(jLabel68)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane29)
                .addGap(18, 18, 18)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane31.setViewportView(jPanel12);

        jTabbedPane1.addTab("Aktuális", jScrollPane31);

        jScrollPane56.setHorizontalScrollBar(null);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabel87.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel87.setText("Diagnózis(ok)");

        jScrollPane57.setBorder(null);

        jTextPane40.setEditable(false);
        jTextPane40.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane57.setViewportView(jTextPane40);

        jScrollPane58.setBorder(null);

        jTextPane41.setEditable(false);
        jTextPane41.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane58.setViewportView(jTextPane41);

        jLabel88.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel88.setText("Terápiás koncepció");

        jScrollPane59.setBorder(null);

        jTextPane42.setEditable(false);
        jTextPane42.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane59.setViewportView(jTextPane42);

        jLabel89.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel89.setText("JAVASLAT(OK)");

        jLabel90.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel90.setText("1. Étrend");

        jScrollPane60.setBorder(null);

        jTextPane43.setEditable(false);
        jTextPane43.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane60.setViewportView(jTextPane43);

        jLabel91.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel91.setText("2. Gyógynövény");

        jScrollPane61.setBorder(null);

        jTextPane44.setEditable(false);
        jTextPane44.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane61.setViewportView(jTextPane44);

        jLabel92.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel92.setText("3. Kínai orvosság");

        jScrollPane62.setBorder(null);

        jTextPane45.setEditable(false);
        jTextPane45.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane62.setViewportView(jTextPane45);

        jLabel93.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel93.setText("4. Mozgás/gyógytorna");

        jLabel94.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jLabel94.setText("5. Életmód, egyéb javaslat");

        jScrollPane63.setBorder(null);

        jTextPane46.setEditable(false);
        jTextPane46.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane63.setViewportView(jTextPane46);

        jButton10.setBackground(new java.awt.Color(0, 0, 0));
        jButton10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Adatok módosítása");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane58, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel88))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel94))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel87))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel90))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel92))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel91))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel93))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane57, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane59, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane60, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane61, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane62, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane63, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(jLabel89))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(572, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel87)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane57)
                .addGap(18, 18, 18)
                .addComponent(jLabel88)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane58)
                .addGap(18, 18, 18)
                .addComponent(jLabel89)
                .addGap(16, 16, 16)
                .addComponent(jLabel90)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane59)
                .addGap(18, 18, 18)
                .addComponent(jLabel91)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane60)
                .addGap(18, 18, 18)
                .addComponent(jLabel92)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel93)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane62)
                .addGap(18, 18, 18)
                .addComponent(jLabel94)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane63)
                .addGap(18, 18, 18)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane56.setViewportView(jPanel14);

        jTabbedPane1.addTab("HKO diagnózis", jScrollPane56);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane5.setBorder(null);

        jTextPane5.setEditable(false);
        jTextPane5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane5.setViewportView(jTextPane5);

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Adatok módosítása");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane5))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(217, 217, 217))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Nyelv", jPanel10);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane6.setBorder(null);

        jTextPane6.setEditable(false);
        jTextPane6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jScrollPane6.setViewportView(jTextPane6);

        jButton7.setBackground(new java.awt.Color(0, 0, 0));
        jButton7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Adatok módosítása");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane6))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(217, 217, 217))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Fül", jPanel11);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Mélység");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Sebesség");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Erő");

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel18.setText("Ritmus");

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel19.setText("BAL");

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel20.setText("JOBB");

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel21.setText("Mélység");

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel22.setText("Sebesség");

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel23.setText("Erő");

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel24.setText("Ritmus");

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel25.setText("1 (T):");

        jLabel26.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel26.setText("2 (L):");

        jLabel27.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel27.setText("3 (V):");

        jLabel28.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel28.setText("1 (Sz):");

        jLabel29.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel29.setText("2 (M):");

        jLabel30.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel30.setText("3 (V):");

        jLabel31.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel31.setText("jLabel31");

        jLabel32.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel32.setText("jLabel32");

        jLabel33.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel33.setText("jLabel33");

        jLabel34.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel34.setText("jLabel34");

        jLabel35.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel35.setText("jLabel31");

        jLabel36.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel36.setText("jLabel32");

        jLabel37.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel37.setText("jLabel33");

        jLabel38.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel38.setText("jLabel34");

        jLabel39.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel39.setText("jLabel31");

        jLabel40.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel40.setText("jLabel32");

        jLabel41.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel41.setText("jLabel33");

        jLabel42.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel42.setText("jLabel34");

        jLabel43.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel43.setText("jLabel31");

        jLabel44.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel44.setText("jLabel32");

        jLabel45.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel45.setText("jLabel33");

        jLabel46.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel46.setText("jLabel34");

        jLabel47.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel47.setText("jLabel31");

        jLabel48.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel48.setText("jLabel32");

        jLabel49.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel49.setText("jLabel33");

        jLabel50.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel50.setText("jLabel34");

        jLabel51.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel51.setText("jLabel31");

        jLabel52.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel52.setText("jLabel32");

        jLabel53.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel53.setText("jLabel33");

        jLabel54.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel54.setText("jLabel34");

        jScrollPane30.setBorder(null);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setBorder(null);
        jScrollPane30.setViewportView(jTextArea2);

        jLabel61.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel61.setText("Egyéb");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel61)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(59, 59, 59)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel47)
                                    .addComponent(jLabel43)
                                    .addComponent(jLabel51)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(jLabel7))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel9Layout.createSequentialGroup()
                                            .addGap(14, 14, 14)
                                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel9Layout.createSequentialGroup()
                                                    .addGap(1, 1, 1)
                                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel25)
                                                        .addComponent(jLabel26)))
                                                .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel30)
                                            .addComponent(jLabel28)
                                            .addComponent(jLabel29)))
                                    .addComponent(jLabel20))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel35)
                                    .addComponent(jLabel39))))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel36)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel40)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel44)
                                    .addComponent(jLabel48)
                                    .addComponent(jLabel52))
                                .addGap(51, 51, 51)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel41)
                                            .addComponent(jLabel37)
                                            .addComponent(jLabel45)
                                            .addComponent(jLabel49)
                                            .addComponent(jLabel53)
                                            .addComponent(jLabel33)
                                            .addComponent(jLabel9))
                                        .addGap(51, 51, 51)
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel54)
                                            .addComponent(jLabel50)
                                            .addComponent(jLabel46)
                                            .addComponent(jLabel38)
                                            .addComponent(jLabel24)
                                            .addComponent(jLabel42)
                                            .addComponent(jLabel34)
                                            .addComponent(jLabel18)))))
                            .addComponent(jLabel8))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane30, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 35, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32)
                            .addComponent(jLabel33)
                            .addComponent(jLabel34))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(jLabel35)
                            .addComponent(jLabel36)
                            .addComponent(jLabel37)
                            .addComponent(jLabel38))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(jLabel39)
                            .addComponent(jLabel40)
                            .addComponent(jLabel41)
                            .addComponent(jLabel42))
                        .addGap(43, 43, 43)
                        .addComponent(jLabel19)
                        .addGap(33, 33, 33)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(jLabel43))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel47)
                                .addComponent(jLabel48)
                                .addComponent(jLabel49)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel30))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel18))
                        .addGap(169, 169, 169)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel21))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44)
                            .addComponent(jLabel45)
                            .addComponent(jLabel46))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel50)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52)
                            .addComponent(jLabel53)
                            .addComponent(jLabel54)
                            .addComponent(jLabel51))))
                .addGap(41, 41, 41)
                .addComponent(jLabel61)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane30, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pulzus", jPanel9);

        jLabel3.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel3.setText("Manuálterápia");

        jScrollPane35.setViewportView(jTextPane18);

        jButton15.setBackground(new java.awt.Color(0, 0, 0));
        jButton15.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton15.setForeground(new java.awt.Color(255, 255, 255));
        jButton15.setText("Módosítás");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane35, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane35, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(474, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manuálterápia", jPanel8);

        jTabbedPane3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel57.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel57.setText("Értékelés");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane8.setViewportView(jTextArea1);

        jComboBox1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "────────", "gyógyult", "részben gyógyult", "nem gyógyult", "egyéb" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel64.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel64.setText("1343-12-23");

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Mai dátum hozzáadása");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(0, 0, 0));
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Dátum módosítása");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel57))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel57)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jTabbedPane3.addTab("Záróvélemény", jPanel4);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Új kezelés");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Kezelés törlése");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(0, 0, 0));
        jButton12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Mentés");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });

        jButton14.setBackground(new java.awt.Color(0, 0, 0));
        jButton14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton14.setForeground(new java.awt.Color(255, 255, 255));
        jButton14.setText("PDF");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleDescription("tab1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        File folder = new File(Controller.controller.path+idNumber+File.separatorChar+"Treatments");
	File[] listOfFiles = folder.listFiles();
        if(idx>listOfFiles.length){
            treatments.remove(idx-1);
            jTabbedPane3.remove(idx);
            idx--;
            Controller.controller.sumOfTreatments--;
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDateTime dateTime = LocalDateTime.now();
        String time = dateTime.format(formatter); 
        jLabel64.setText(time);
    }//GEN-LAST:event_jButton5MouseClicked

    
    //make statistic about the efficiency
    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if (evt.getStateChange() == 2) {
           String base=(String) evt.getItem();
           
           if(base.equals("────────")){
               Controller.controller.treatmentInProgress--;
           }else if(base.equals("gyógyult")){
               Controller.controller.healed--;
           }else if(base.equals("részben gyógyult")){
               Controller.controller.partiallyHealed--;
           }else if(base.equals("nem gyógyult")){
               Controller.controller.notHealed--;
           }else if(base.equals("egyéb")){
               Controller.controller.other--;
           }
        }
        
        if (evt.getStateChange() == 1) {
           String base=(String) evt.getItem();
           
           if(base.equals("────────")){
               Controller.controller.treatmentInProgress++;
           }else if(base.equals("gyógyult")){
               Controller.controller.healed++;
           }else if(base.equals("részben gyógyult")){
               Controller.controller.partiallyHealed++;
           }else if(base.equals("nem gyógyult")){
               Controller.controller.notHealed++;
           }else if(base.equals("egyéb")){
               Controller.controller.other++;
           }
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            saveFinalReport();
        } catch (Exception ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        Controller.controller.saveStatistic();
        
        for(int i=0; i<treatments.size(); i++){
            try {
                treatments.get(i).save(i, idNumber);
            } catch (Exception ex) {
                Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        Controller.controller.mainFrame.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        DateModify d=new DateModify(this);
        d.setVisible(true);
    }//GEN-LAST:event_jButton11MouseClicked

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
        this.dispose();
        JOptionPane.showMessageDialog(null, "Adatok elmentve!");
    }//GEN-LAST:event_jButton12MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        this.setVisible(false);
        Controller.controller.idNumber=idNumber;
        Complaints c=new Complaints();
        try {
            c.load(idNumber);
        } catch (Exception ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        c.changeButtons();
        c.setVisible(true);
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        this.setVisible(false);
        Controller.controller.idNumber=idNumber;
        Ear e=new Ear();
        try {
            e.load(idNumber);
        } catch (Exception ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        e.changeButtons();
        e.setVisible(true);
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        this.setVisible(false);
        Controller.controller.idNumber=idNumber;
        Tongue t=new Tongue();
        try {
            t.load(idNumber);
        } catch (Exception ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        t.changeButtons();
        t.setVisible(true);
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        this.setVisible(false);
        Controller.controller.idNumber=idNumber;
        Diagnose d=new Diagnose();
        try {
            d.load(idNumber);
        } catch (Exception ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        d.changeButtons();
        d.setVisible(true);
    }//GEN-LAST:event_jButton10MouseClicked

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        this.setVisible(false);
        Controller.controller.idNumber=idNumber;
        MedicalHistory m=new MedicalHistory();
        try {
            m.load(idNumber);
        } catch (Exception ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        m.changeButtons();
        m.setVisible(true);
    }//GEN-LAST:event_jButton9MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        Scanner input=null;
        String line="";
        try {
            input=new Scanner(new File(Controller.controller.path+File.separatorChar+idNumber+File.separatorChar+"personaldata.txt"));
            for(int i=0; i<10; i++){
                line=input.nextLine();
            }
            Controller.controller.setSex(line);
            Controller.controller.idNumber=idNumber;
            this.setVisible(false);
            Questions q=new Questions();
            q.load(idNumber);
            q.setVisible(true);
            q.hideComponents();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        this.setVisible(false);
        Controller.controller.idNumber=idNumber;
        PsychologicalAnamnesis p=new PsychologicalAnamnesis();
        try {
            p.load(idNumber);
        } catch (Exception ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        p.setVisible(true);
        p.changeButtons();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseClicked
        this.setVisible(false);
        Controller.controller.idNumber=idNumber;
        PersonalDatas p=new PersonalDatas();
        try {
            p.load(idNumber);
        } catch (Exception ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        p.setVisible(true);
        p.changeButtons();
    }//GEN-LAST:event_jButton13MouseClicked

    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseClicked
    
// TODO add your handling code here:
        
        
              //pdf
//       try{
//           PDDocument doc = new PDDocument();
//           PDPage myPage = new PDPage();
//           doc.addPage(myPage);
//           PDPageContentStream cont = new PDPageContentStream(doc, myPage);
//           cont.beginText();
//
//                cont.setFont(PDType1Font.TIMES_ROMAN, 12);
//                cont.setLeading(14.5f);
//
//                cont.newLineAtOffset(25, 700);
//                String line1 = "World War II (often abbreviated to WWII or WW2)";
//                cont.showText(line1);
//
//                cont.newLine();
//
//                
//
//                cont.endText();
//                doc.save("C://ez//va.pdf");
//
//
//
//       }catch(Exception e){}
//try{
        
        
//        String fileName = "PdfWithtext.pdf"; // name of our file
//        
//        PDDocument doc = new PDDocument();
//        PDPage page = new PDPage();
//
//        doc.addPage(page);
//
//        PDPageContentStream content = new PDPageContentStream(doc, page);
//        
//        content.beginText();
//        content.setFont(PDType1Font.COURIER, 12);
//        content.setLeading(14.5f);
//        content.newLineAtOffset(25, 700);
//        content.showText("Beteg Urlap");
//        content.endText();
//        
//        content.beginText();
//        content.newLine();
//        
//        
//        content.setLeading(14.5f);
//        content.newLineAtOffset(25, 700);
//        String lines[] = jTextArea7.getText().split("\\r?\\n");
//        for (String line : lines) {
//            if(!"".equals(line))
//            {
//                content.showText(line);
//                content.newLine();
//                
//            }
//            
//        }
//   
//        content.endText();
//        content.close();
//        doc.save(fileName);
//        doc.close();
// 
//        JOptionPane.showMessageDialog(null,"your file created in : "+ System.getProperty("user.dir"));
//        }
//        catch(IOException e){   
//        System.out.println(e.getMessage());
//        }


//itextpdf

         Document document = new Document();

        try {
            PdfWriter.getInstance(document,new FileOutputStream("Urlap"+idNumber+".pdf"));

            document.open();
            
            //String lines[] = jTextArea7.getText().split("\\r?\\n");
             
             try {
                 BaseFont baseFont = BaseFont.createFont(BaseFont.TIMES_ROMAN, BaseFont.CP1250, BaseFont.NOT_EMBEDDED);
                 Font cellFont20 = new Font(baseFont, 20);
                 Font cellFont12italic = new Font(baseFont, 12,Font.ITALIC);
                 Font cellFont12 = new Font(baseFont, 12);
                 Font boldFont22 = new Font(baseFont, 22, Font.BOLD);
                 Font boldFont12 = new Font(baseFont, 12, Font.BOLD);
                 com.itextpdf.text.Paragraph p=new com.itextpdf.text.Paragraph("Beteg Űrlap \n",boldFont22);
                 document.add(p);
                 
                //adatok
//                for (String line : lines)
//                {
//                    if(!"".equals(line))
//                    {
//                        document.add(new com.itextpdf.text.Paragraph(line,cellFont12));
//                    }
//                }

            try {
            String path=Controller.controller.path + idNumber + File.separatorChar;
            Scanner personalDataInput=new Scanner(new File(path+"personaldata.txt"));
            personalDataInput.nextLine();
            com.itextpdf.text.Paragraph name=new com.itextpdf.text.Paragraph("Név: ",cellFont12);
            name.add(new Chunk(EncryptDecrypt.decrypt( personalDataInput.nextLine()),boldFont12));
            document.add(name);
            com.itextpdf.text.Paragraph mothername=new com.itextpdf.text.Paragraph("Anyja neve: ",cellFont12);
            mothername.add(new Chunk(EncryptDecrypt.decrypt(personalDataInput.nextLine()),boldFont12));
            document.add(mothername);
            com.itextpdf.text.Paragraph birthP=new com.itextpdf.text.Paragraph("Születési hely: ",cellFont12);
            birthP.add(new Chunk(EncryptDecrypt.decrypt(personalDataInput.nextLine()),boldFont12));
            document.add(birthP);

            com.itextpdf.text.Paragraph birthT=new com.itextpdf.text.Paragraph("Születési időpont: ",cellFont12);
            birthT.add(new Chunk(EncryptDecrypt.decrypt(personalDataInput.nextLine()),boldFont12));
            document.add(birthT);

            com.itextpdf.text.Paragraph status=new com.itextpdf.text.Paragraph("Családi állapot: ",cellFont12);
            status.add(new Chunk(EncryptDecrypt.decrypt(personalDataInput.nextLine()),boldFont12));
            document.add(status);

            com.itextpdf.text.Paragraph work=new com.itextpdf.text.Paragraph("Foglalkozás: ",cellFont12);
            work.add(new Chunk(EncryptDecrypt.decrypt(personalDataInput.nextLine()),boldFont12));
            document.add(work);

            com.itextpdf.text.Paragraph email=new com.itextpdf.text.Paragraph("E-mail cím: ",cellFont12);
            email.add(new Chunk(EncryptDecrypt.decrypt(personalDataInput.nextLine()),boldFont12));
            document.add(email);

            com.itextpdf.text.Paragraph tel=new com.itextpdf.text.Paragraph("Telefonszám: ",cellFont12);
            tel.add(new Chunk(EncryptDecrypt.decrypt(personalDataInput.nextLine()),boldFont12));
            document.add(tel);

            com.itextpdf.text.Paragraph sex=new com.itextpdf.text.Paragraph("Neme: ",cellFont12);
            sex.add(new Chunk(EncryptDecrypt.decrypt(personalDataInput.nextLine()),boldFont12));
            document.add(sex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }       catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InvalidKeySpecException ex) {
                    Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NoSuchPaddingException ex) {
                    Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InvalidKeyException ex) {
                    Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InvalidAlgorithmParameterException ex) {
                    Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalBlockSizeException ex) {
                    Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (BadPaddingException ex) {
                    Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
                }
                //tunetek
                document.add(new com.itextpdf.text.Paragraph("Tünetek",boldFont22));
                
                String symp="";
                for(int i=0;i<jList11.getModel().getSize();i++)
                {
                    symp+=jList11.getModel().getElementAt(i)+", ";
                }
                //symp+="\n";
                for(int i=0;i<jList10.getModel().getSize();i++)
                {
                    if(i==(jList10.getModel().getSize()-1))
                        symp+=jList10.getModel().getElementAt(i);
                    else
                        symp+=jList10.getModel().getElementAt(i)+", ";                        
                }
                if(!(symp.equals("")))
                {
                    document.add(new com.itextpdf.text.Paragraph("Fej:",boldFont12));
                    String htmlfreesymp= Jsoup.parse(symp).text();
                    document.add(new com.itextpdf.text.Paragraph(htmlfreesymp,cellFont12italic));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                
                symp="";
                for(int i=0;i<jList12.getModel().getSize();i++)
                {
                    symp+=jList12.getModel().getElementAt(i)+", ";
                }
               
                for(int i=0;i<jList14.getModel().getSize();i++)
                {
                    if(i==(jList14.getModel().getSize()-1))
                        symp+=jList14.getModel().getElementAt(i);
                    else
                        symp+=jList14.getModel().getElementAt(i)+", ";                        
                }
                if(!(symp.equals("")))
                {
                    document.add(new com.itextpdf.text.Paragraph("Mellkas:",boldFont12));
                    String htmlfreesymp= Jsoup.parse(symp).text();
                    document.add(new com.itextpdf.text.Paragraph(htmlfreesymp,cellFont12italic));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                
                symp="";
                for(int i=0;i<jList13.getModel().getSize();i++)
                {
                    symp+=jList13.getModel().getElementAt(i)+", ";
                }
                
                for(int i=0;i<jList15.getModel().getSize();i++)
                {
                    if(i==(jList15.getModel().getSize()-1))
                        symp+=jList15.getModel().getElementAt(i);
                    else
                        symp+=jList15.getModel().getElementAt(i)+", ";                        
                }
                if(!(symp.equals("")))
                {
                    document.add(new com.itextpdf.text.Paragraph("Has:",boldFont12));
                    String htmlfreesymp= Jsoup.parse(symp).text();
                    document.add(new com.itextpdf.text.Paragraph(htmlfreesymp,cellFont12italic));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                
                symp="";
                for(int i=0;i<jList16.getModel().getSize();i++)
                {
                    symp+=jList16.getModel().getElementAt(i)+", ";
                }
                
                for(int i=0;i<jList9.getModel().getSize();i++)
                {
                    if(i==(jList9.getModel().getSize()-1))
                        symp+=jList9.getModel().getElementAt(i);
                    else
                        symp+=jList9.getModel().getElementAt(i)+", ";                        
                }
                if(!(symp.equals("")))
                {
                    document.add(new com.itextpdf.text.Paragraph("Alhas:",boldFont12));
                    String htmlfreesymp= Jsoup.parse(symp).text();
                    document.add(new com.itextpdf.text.Paragraph(htmlfreesymp,cellFont12italic));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                symp="";
                for(int i=0;i<jList17.getModel().getSize();i++)
                {
                    if(i==(jList17.getModel().getSize()-1))
                        symp+=jList17.getModel().getElementAt(i);
                    else
                        symp+=jList17.getModel().getElementAt(i)+", ";
                }
                if(!(symp.equals("")))
                {
                    document.add(new com.itextpdf.text.Paragraph("Gerinc:",boldFont12));
                    String htmlfreesymp= Jsoup.parse(symp).text();
                    document.add(new com.itextpdf.text.Paragraph(htmlfreesymp,cellFont12italic));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                
                
                
                symp="";
                for(int i=0;i<jList18.getModel().getSize();i++)
                {                   
                        symp+=jList18.getModel().getElementAt(i)+", ";
                }
                if(!(symp.equals("")))
                {
                    document.add(new com.itextpdf.text.Paragraph("Végtagok:",boldFont12));
                    String htmlfreesymp= Jsoup.parse(symp).text();
                    document.add(new com.itextpdf.text.Paragraph(htmlfreesymp,cellFont12italic));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                String medicalHistory="";
                boolean kelle=true;               
                medicalHistory = jTextPane9.getText();
                if(medicalHistory.length()>1)
                {
                    document.add(new com.itextpdf.text.Paragraph("Kórtörténet",boldFont22)); kelle=false;
                    document.add(new com.itextpdf.text.Paragraph("Gyermekkori nagyobb betegségek:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(medicalHistory,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                medicalHistory="";
               
                medicalHistory= jTextPane10.getText();
                if(medicalHistory.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Kórtörténet",boldFont22));kelle=false;}
                     document.add(new com.itextpdf.text.Paragraph("Elöző betegség(ek):",boldFont12));
                     document.add(new com.itextpdf.text.Paragraph(medicalHistory,cellFont12));
                     document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }

                medicalHistory="";
                
                medicalHistory= jTextPane11.getText();
                if(medicalHistory.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Kórtörténet",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Ismert, jelenleg is fennálló betegségek(ek):",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(medicalHistory,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                medicalHistory="";
                
                medicalHistory= jTextPane12.getText();
                if(medicalHistory.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Kórtörténet",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Műtétek:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(medicalHistory,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                medicalHistory="";
                
                medicalHistory= jTextPane13.getText();
                if(medicalHistory.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Kórtörténet",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Nagyobb fogászati beavatkozás(ok):",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(medicalHistory,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                medicalHistory="";
                
                medicalHistory= jTextPane14.getText();
                if(medicalHistory.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Kórtörténet",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Jelenleg szedett gyógyszer(ek), gyógynövény(ek):",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(medicalHistory,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                medicalHistory="";
                
                medicalHistory= jTextPane17.getText();
                if(medicalHistory.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Kórtörténet",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Gyógyszerérzékenység:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(medicalHistory,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                medicalHistory="";
                
                medicalHistory= jTextPane15.getText();
                if(medicalHistory.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Kórtörténet",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Korábbi terhesség(ek):",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(medicalHistory,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                medicalHistory="";
               
                medicalHistory= jLabel2.getText();
                if(medicalHistory.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Kórtörténet",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Jelenleg állapotos-e:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(medicalHistory,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                medicalHistory="";
                //pszichikum
                kelle=true;
                String psich;
                //document.add(new com.itextpdf.text.Paragraph("Pszichikum",boldFont22));
                psich = jTextPane2.getText();
                if(psich.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Pszichikum",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Magzati kor, születés körüli időszak:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(psich,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
               
                psich="";
                
                psich = jTextPane3.getText();
                if(psich.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Pszichikum",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Gyermekkor:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(psich,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                psich="";
                
                psich = jTextPane4.getText();
                if(psich.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Pszichikum",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Felnőttkor, ill a jelenleg fenálló helyzet:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(psich,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                psich="";
                
                //Actual
                kelle=true;
                String actual;
                
                actual = jTextPane1.getText();
                if(actual.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Aktuális",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Nyugati orvosi diagnózis(ok):",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(actual,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                actual="";
                
                actual = jTextPane7.getText();
                if(actual.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Aktuális",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Jelen panaszok:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(actual,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                actual="";
                
                actual = jTextPane8.getText();
                if(actual.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Aktuális",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Laborvizsgálatok eredményei:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(actual,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                actual="";
                
                actual = jTextPane16.getText();
                if(actual.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Aktuális",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Képalkotó vizsgálatok:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(actual,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                actual = jTextPane18.getText();
                if(actual.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("Aktuális",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Manuálterápia:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(actual,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                actual="";
                
                
                //Diagnose
                kelle=true;
                String diagnose;
                
                diagnose = jTextPane40.getText();
                if(diagnose.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("HKO diagnózis",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("diagnózis(ok):",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(diagnose,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                diagnose="";
                
                diagnose = jTextPane41.getText();
                if(diagnose.length()>1)
                {
                    if(kelle){document.add(new com.itextpdf.text.Paragraph("HKO diagnózis",boldFont22));kelle=false;}
                    document.add(new com.itextpdf.text.Paragraph("Terápiás koncepció:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(diagnose,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                diagnose="";
                
                kelle=true;
                diagnose = jTextPane42.getText();
                if(diagnose.length()>1)
                {
                    if(kelle){
                        com.itextpdf.text.Paragraph javaslatok=new com.itextpdf.text.Paragraph("JAVASLAT(OK)",boldFont22);
                        javaslatok.setAlignment(Element.ALIGN_CENTER);
                        document.add(javaslatok);
                        kelle=false;
                    }
                    document.add(new com.itextpdf.text.Paragraph("1. Étrend:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(diagnose,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                diagnose="";
                
                diagnose = jTextPane43.getText();
                if(diagnose.length()>1)
                {
                     if(kelle){
                        com.itextpdf.text.Paragraph javaslatok=new com.itextpdf.text.Paragraph("JAVASLAT(OK)",boldFont22);
                        javaslatok.setAlignment(Element.ALIGN_CENTER);
                        document.add(javaslatok);
                        kelle=false;
                    }
                    document.add(new com.itextpdf.text.Paragraph("2. Gyógynövény:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(diagnose,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                diagnose="";
                
                diagnose = jTextPane44.getText();
                if(diagnose.length()>1)
                {
                     if(kelle){
                        com.itextpdf.text.Paragraph javaslatok=new com.itextpdf.text.Paragraph("JAVASLAT(OK)",boldFont22);
                        javaslatok.setAlignment(Element.ALIGN_CENTER);
                        document.add(javaslatok);
                        kelle=false;
                    }
                    document.add(new com.itextpdf.text.Paragraph("3. Kínai orvosság:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(diagnose,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                diagnose="";
                
                diagnose = jTextPane45.getText();
                if(diagnose.length()>1)
                {
                     if(kelle){
                        com.itextpdf.text.Paragraph javaslatok=new com.itextpdf.text.Paragraph("JAVASLAT(OK)",boldFont22);
                        javaslatok.setAlignment(Element.ALIGN_CENTER);
                        document.add(javaslatok);
                        kelle=false;
                    }
                    document.add(new com.itextpdf.text.Paragraph("4. Mozgás/gyógytorna:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(diagnose,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                diagnose="";
                
                diagnose = jTextPane46.getText();
                if(diagnose.length()>1)
                {
                     if(kelle){
                        com.itextpdf.text.Paragraph javaslatok=new com.itextpdf.text.Paragraph("JAVASLAT(OK)",boldFont22);
                        javaslatok.setAlignment(Element.ALIGN_CENTER);
                        document.add(javaslatok);
                        kelle=false;
                    }
                    document.add(new com.itextpdf.text.Paragraph("5. Életmód, egyéb javaslat:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(diagnose,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                diagnose="";
                
                //Pulse
                if((jLabel31.getText().equals("felületes")||jLabel31.getText().equals("közép")||jLabel31.getText().equals("mély")))
                {
                    document.add(new com.itextpdf.text.Paragraph("Pulzus",boldFont22));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                    PdfPTable table = new PdfPTable(5);

                    table.addCell(new com.itextpdf.text.Paragraph("Jobb:",boldFont12));
                    table.addCell(new com.itextpdf.text.Paragraph("Mélység:",boldFont12));
                    table.addCell(new com.itextpdf.text.Paragraph("Sebesség:",boldFont12));
                    table.addCell(new com.itextpdf.text.Paragraph("Erő:",boldFont12));
                    table.addCell(new com.itextpdf.text.Paragraph("Ritmus:",boldFont12));
                    table.addCell(new com.itextpdf.text.Paragraph("1(T)",boldFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel31.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel32.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel33.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel34.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph("2(L)",boldFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel35.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel36.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel37.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel38.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph("3(V)",boldFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel39.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel40.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel41.getText(),cellFont12));
                    table.addCell(new com.itextpdf.text.Paragraph(jLabel42.getText(),cellFont12));
                    document.add(table);
                
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                    
                    PdfPTable table2 = new PdfPTable(5);
                    
                    table2.addCell(new com.itextpdf.text.Paragraph("Bal:",boldFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph("Mélység:",boldFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph("Sebesség:",boldFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph("Erő:",boldFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph("Ritmus:",boldFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph("1(Sz)",boldFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel43.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel44.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel45.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel46.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph("2(M)",boldFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel47.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel48.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel49.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel50.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph("3(V)",boldFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel51.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel52.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel53.getText(),cellFont12));
                    table2.addCell(new com.itextpdf.text.Paragraph(jLabel54.getText(),cellFont12));
                    document.add(table2);
                    document.add(new com.itextpdf.text.Paragraph("Egyéb:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(jTextArea2.getText(),cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                
                
                
                
                String tongue = jTextPane5.getText();
                if(tongue.length()>1)
                {
                    document.add(new com.itextpdf.text.Paragraph("Nyelv:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(tongue,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                String ear = jTextPane6.getText();
                if(ear.length()>1)
                {
                    document.add(new com.itextpdf.text.Paragraph("Fül:",boldFont12));
                    document.add(new com.itextpdf.text.Paragraph(ear,cellFont12));
                    document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                }
                document.add(new com.itextpdf.text.Paragraph(" "));//terkoz
                
                document.add(new com.itextpdf.text.Paragraph("Értékelés:",boldFont22));
                document.add(new com.itextpdf.text.Paragraph("Értékelés dátuma: "+jLabel64.getText(),cellFont12));
                document.add(new com.itextpdf.text.Paragraph(jTextArea1.getText(),cellFont12));
                document.add(new com.itextpdf.text.Paragraph("A beteg állapota: "+jComboBox1.getSelectedItem().toString(),boldFont12));
                
//                File folder = new File(Controller.controller.path + idNumber + File.separatorChar+"Treatments");
//		File[] listOfFiles = folder.listFiles();
//                    if(listOfFiles.length>0){
//                    for(int i = 1; i < listOfFiles.length+1; i++){
//                        document.add(new com.itextpdf.text.Paragraph(i+". kezelés:",boldFont12));
//                        treatments.add(new Treatment());
//                        Treatment currentTreatment=treatments.get(idx);
//                        currentTreatment.load(i,Controller.controller.path + idNumber + File.separatorChar );
//                        currentTreatment.pdf(document);
//                        idx++;
//                    }
//                    
//                }
                int i=0;
                for (Treatment element : treatments)
                {
                    i++;
                }
                if(i>0)document.add(new com.itextpdf.text.Paragraph("Kezelés:",boldFont22));
                for (Treatment element : treatments) {
                     element.setIsFilled();
                     if(element.getIsFilled())
                        element.pdf(document);
                 }
                
                
                
                



                
                document.add(new com.itextpdf.text.Paragraph("Dokumentum vége"));
                document.close(); 
                JOptionPane.showMessageDialog(null,"A pdf fájl sikeresen elkészült, megtalálható az alábbi helyen:\n "+ System.getProperty("user.dir"));
       } catch (IOException ex) {
                 Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
             }

        } catch (DocumentException e) {
            e.printStackTrace();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        
        
    }//GEN-LAST:event_jButton14MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        addTreatment();
        Controller.controller.sumOfTreatments++;
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton15MouseClicked
        this.setVisible(false);
        Controller.controller.idNumber=idNumber;
        ManualTherapy m=new ManualTherapy();
        try {
            m.load(idNumber);
        } catch (Exception ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        m.changeButtons();
        m.setVisible(true);
    }//GEN-LAST:event_jButton15MouseClicked

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JList<String> jList10;
    private javax.swing.JList<String> jList11;
    private javax.swing.JList<String> jList12;
    private javax.swing.JList<String> jList13;
    private javax.swing.JList<String> jList14;
    private javax.swing.JList<String> jList15;
    private javax.swing.JList<String> jList16;
    private javax.swing.JList<String> jList17;
    private javax.swing.JList<String> jList18;
    private javax.swing.JList<String> jList9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane29;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane30;
    private javax.swing.JScrollPane jScrollPane31;
    private javax.swing.JScrollPane jScrollPane32;
    private javax.swing.JScrollPane jScrollPane33;
    private javax.swing.JScrollPane jScrollPane35;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane56;
    private javax.swing.JScrollPane jScrollPane57;
    private javax.swing.JScrollPane jScrollPane58;
    private javax.swing.JScrollPane jScrollPane59;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane60;
    private javax.swing.JScrollPane jScrollPane61;
    private javax.swing.JScrollPane jScrollPane62;
    private javax.swing.JScrollPane jScrollPane63;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane10;
    private javax.swing.JTextPane jTextPane11;
    private javax.swing.JTextPane jTextPane12;
    private javax.swing.JTextPane jTextPane13;
    private javax.swing.JTextPane jTextPane14;
    private javax.swing.JTextPane jTextPane15;
    private javax.swing.JTextPane jTextPane16;
    private javax.swing.JTextPane jTextPane17;
    private javax.swing.JTextPane jTextPane18;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JTextPane jTextPane40;
    private javax.swing.JTextPane jTextPane41;
    private javax.swing.JTextPane jTextPane42;
    private javax.swing.JTextPane jTextPane43;
    private javax.swing.JTextPane jTextPane44;
    private javax.swing.JTextPane jTextPane45;
    private javax.swing.JTextPane jTextPane46;
    private javax.swing.JTextPane jTextPane5;
    private javax.swing.JTextPane jTextPane6;
    private javax.swing.JTextPane jTextPane7;
    private javax.swing.JTextPane jTextPane8;
    private javax.swing.JTextPane jTextPane9;
    // End of variables declaration//GEN-END:variables

    private void loadSymptoms(String path)throws Exception {
        Scanner frequentInput=null;
        Scanner rareInput=null;
        String path1=path+"frequent.txt";
        String path2=path+"rare.txt";
        try {
            frequentInput = new Scanner(new File(path1));
            rareInput = new Scanner(new File(path2));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        String line =frequentInput.nextLine();
        String line2 =rareInput.nextLine();
        
        //HEAD
       
        
        DefaultListModel listModel1 = new DefaultListModel();
        
        while(!line.equals("*****")){
            listModel1.addElement(EncryptDecrypt.decrypt(line));
            line = frequentInput.nextLine();
        }
        jList11.setModel(listModel1);
        
        
        DefaultListModel listModel2 = new DefaultListModel();
        
        while(!line2.equals("*****")){
            if(line2!=null){
            listModel2.addElement(EncryptDecrypt.decrypt(line2));
            line2 =rareInput.nextLine();}
        }
        jList10.setModel(listModel2);
        
        line = frequentInput.nextLine();
        line2 =rareInput.nextLine();
        
        //CHEST
        
        DefaultListModel listModel3 = new DefaultListModel();
        while(!line.equals("*****")){
            listModel3.addElement(EncryptDecrypt.decrypt(line));
            line = frequentInput.nextLine();
        }
        jList12.setModel(listModel3);
        
        DefaultListModel listModel4 = new DefaultListModel();
        while(!line2.equals("*****")){
            listModel4.addElement(EncryptDecrypt.decrypt(line2));
            line2 = rareInput.nextLine();
        }
        jList14.setModel(listModel4);
        
        line = frequentInput.nextLine();
        line2 = rareInput.nextLine();
        
        //BELLY
        
        DefaultListModel listModel5 = new DefaultListModel();
        while(!line.equals("*****")){
            listModel5.addElement(EncryptDecrypt.decrypt(line));
            line = frequentInput.nextLine();
        }
        
        line = frequentInput.nextLine();
        
        while(!line.equals("*****")){
            listModel5.addElement(EncryptDecrypt.decrypt(line));
            line = frequentInput.nextLine();
        }
        
        jList13.setModel(listModel5);
        
        DefaultListModel listModel6 = new DefaultListModel();
        while(!line2.equals("*****")){
            listModel6.addElement(EncryptDecrypt.decrypt(line2));
            line2 = rareInput.nextLine();
        }
        
        line2 = rareInput.nextLine();
        
        while(!line2.equals("*****")){
            listModel6.addElement(EncryptDecrypt.decrypt(line2));
            line2 = rareInput.nextLine();
        }
        
        
        jList15.setModel(listModel6);
        
        line = frequentInput.nextLine();
        line2 = rareInput.nextLine();
        

        
        
        //LOWER ABDOMEN
        
        DefaultListModel listModel7 = new DefaultListModel();
        while(!line.equals("*****")){
            listModel7.addElement(EncryptDecrypt.decrypt(line));
            line = frequentInput.nextLine();
        }
        
        line = frequentInput.nextLine();
        
        while(!line.equals("*****")){
            listModel7.addElement(EncryptDecrypt.decrypt(line));
            line = frequentInput.nextLine();
        }
        
        jList16.setModel(listModel7);
        
        DefaultListModel listModel8 = new DefaultListModel();
        while(!line2.equals("*****")){
            listModel8.addElement(EncryptDecrypt.decrypt(line2));
            line2 = rareInput.nextLine();
        }
        
        line2 = rareInput.nextLine();
        
        while(!line2.equals("*****")){
            listModel8.addElement(EncryptDecrypt.decrypt(line2));
            line2 = rareInput.nextLine();
        }
        
        
        jList9.setModel(listModel8);
        
        line = frequentInput.nextLine();
        line2 = rareInput.nextLine();
        
        //SPINE
        
        DefaultListModel listModel9 = new DefaultListModel();
        while(!line.equals("*****")){
            listModel9.addElement(EncryptDecrypt.decrypt(line));
            line = frequentInput.nextLine();
        }
        jList17.setModel(listModel9);
        
        line = frequentInput.nextLine();
        
        //EXTREMITIES
        
        DefaultListModel listModel10 = new DefaultListModel();
        while(!line.equals("*****")){
            listModel10.addElement(EncryptDecrypt.decrypt(line));
            line = frequentInput.nextLine();
        }
        jList18.setModel(listModel10);
        
        frequentInput.close();
        rareInput.close();
        
        try {
            Scanner input=new Scanner(new File(Controller.controller.path+idNumber+File.separatorChar+"joints2.txt"));
            line=input.nextLine();
            int num=Integer.parseInt(line);
            int jointNum=2;
            for(int i=0; i<num; i++){
                javax.swing.JScrollPane jScrollPane100=new javax.swing.JScrollPane();
                jScrollPane100.setBorder(null);
                jScrollPane100.getViewport().setOpaque(false);
                jScrollPane100.setOpaque(false);
                jScrollPane100.setBorder(null);
                jScrollPane100.setViewportBorder(null);
                javax.swing.JList<String> j=new javax.swing.JList<>();
                j.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
                j.setBorder(null);
                j.setBackground(new Color(0,0,0,0));
                j.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
                j.setOpaque(false);
                j.setVisibleRowCount(8);
                jScrollPane100.setViewportView(j);
                
                
                
                DefaultListModel listModel = new DefaultListModel();
                line=input.nextLine();
                while(!line.equals("*****")){
                    listModel.addElement(EncryptDecrypt.decrypt(line));
                    line = input.nextLine();
                }
                j.setModel(listModel);
                                       
                jTabbedPane2.addTab("izület " + jointNum, jScrollPane100);
                jointNum++;

            }
        } catch (FileNotFoundException ex) {
        }
    }

    private void myInitComponents(String path) {
        jScrollPane7.setBorder(null);
        
        jScrollPane9.setBorder(null);
        jScrollPane10.setBorder(null);
        jScrollPane11.setBorder(null);
        jScrollPane12.setBorder(null);
        jScrollPane13.setBorder(null);
        jScrollPane14.setBorder(null);
        jScrollPane15.setBorder(null);
        jScrollPane16.setBorder(null);
        jScrollPane17.setBorder(null);
        jScrollPane18.setBorder(null);
        
        jScrollPane19.getVerticalScrollBar().setUnitIncrement(30);
        jScrollPane56.getVerticalScrollBar().setUnitIncrement(30);
        jScrollPane31.getVerticalScrollBar().setUnitIncrement(30);
        jScrollPane32.getVerticalScrollBar().setUnitIncrement(30);
        
        jScrollPane9.getViewport().setOpaque(false);
        jScrollPane9.setOpaque(false);
        jScrollPane9.setBorder(null);
        jScrollPane9.setViewportBorder(null);
        jList9.setBorder(null);
        jList9.setBackground(new Color(0,0,0,0));
        
        jScrollPane10.getViewport().setOpaque(false);
        jScrollPane10.setOpaque(false);
        jScrollPane10.setBorder(null);
        jScrollPane10.setViewportBorder(null);
        jList10.setBorder(null);
        jList10.setBackground(new Color(0,0,0,0));
        
        jScrollPane11.getViewport().setOpaque(false);
        jScrollPane11.setOpaque(false);
        jScrollPane11.setBorder(null);
        jScrollPane11.setViewportBorder(null);
        jList11.setBorder(null);
        jList11.setBackground(new Color(0,0,0,0));
        
        jScrollPane12.getViewport().setOpaque(false);
        jScrollPane12.setOpaque(false);
        jScrollPane12.setBorder(null);
        jScrollPane12.setViewportBorder(null);
        jList12.setBorder(null);
        jList12.setBackground(new Color(0,0,0,0));
        
        jScrollPane13.getViewport().setOpaque(false);
        jScrollPane13.setOpaque(false);
        jScrollPane13.setBorder(null);
        jScrollPane13.setViewportBorder(null);
        jList13.setBorder(null);
        jList13.setBackground(new Color(0,0,0,0));
        
        jScrollPane14.getViewport().setOpaque(false);
        jScrollPane14.setOpaque(false);
        jScrollPane14.setBorder(null);
        jScrollPane14.setViewportBorder(null);
        jList14.setBorder(null);
        jList14.setBackground(new Color(0,0,0,0));
        
        jScrollPane15.getViewport().setOpaque(false);
        jScrollPane15.setOpaque(false);
        jScrollPane15.setBorder(null);
        jScrollPane15.setViewportBorder(null);
        jList15.setBorder(null);
        jList15.setBackground(new Color(0,0,0,0));
        
        jScrollPane16.getViewport().setOpaque(false);
        jScrollPane16.setOpaque(false);
        jScrollPane16.setBorder(null);
        jScrollPane16.setViewportBorder(null);
        jList16.setBorder(null);
        jList16.setBackground(new Color(0,0,0,0));
        
        jScrollPane17.getViewport().setOpaque(false);
        jScrollPane17.setOpaque(false);
        jScrollPane17.setBorder(null);
        jScrollPane17.setViewportBorder(null);
        jList17.setBorder(null);
        jList17.setBackground(new Color(0,0,0,0));
        
        jScrollPane18.getViewport().setOpaque(false);
        jScrollPane18.setOpaque(false);
        jScrollPane18.setBorder(null);
        jScrollPane18.setViewportBorder(null);
        jList18.setBorder(null);
        jList18.setBackground(new Color(0,0,0,0));
    }

    private void loadMedicalHistory(String path)throws Exception {
        try {
            Scanner medicalHistory=new Scanner(new File(path+"medicalhistory.txt"));
            String line=medicalHistory.nextLine();
            String text="";
            while(!line.equals("***")){
                    text+=EncryptDecrypt.decrypt( line)+"\n";
                    line=medicalHistory.nextLine();
                jTextPane9.setText(text);
            }
            
            text="";
            line=medicalHistory.nextLine();
            while(!line.equals("***")){
                    text+=EncryptDecrypt.decrypt( line)+"\n";
                    line=medicalHistory.nextLine();
                jTextPane10.setText(text);
            }
            
            text="";
            line=medicalHistory.nextLine();
            while(!line.equals("***")){
                    text+=EncryptDecrypt.decrypt( line)+"\n";
                    line=medicalHistory.nextLine();
                jTextPane11.setText(text);
            }
            
            text="";
            line=medicalHistory.nextLine();
            while(!line.equals("***")){
                    text+=EncryptDecrypt.decrypt( line)+"\n";
                    line=medicalHistory.nextLine();
                jTextPane12.setText(text);
            }
            
            text="";
            line=medicalHistory.nextLine();
            while(!line.equals("***")){
                    text+=EncryptDecrypt.decrypt( line)+"\n";
                    line=medicalHistory.nextLine();
                jTextPane13.setText(text);
            }
            
            text="";
            line=medicalHistory.nextLine();
            while(!line.equals("***")){
                    text+=EncryptDecrypt.decrypt( line)+"\n";
                    line=medicalHistory.nextLine();
                jTextPane14.setText(text);
            }
            
            text="";
            line=medicalHistory.nextLine();
            while(!line.equals("***")){
                    text+=EncryptDecrypt.decrypt( line)+"\n";
                    line=medicalHistory.nextLine();
                jTextPane15.setText(text);
            }
            
            
            line=medicalHistory.nextLine();
            jLabel2.setText(EncryptDecrypt.decrypt( line));
            line=medicalHistory.nextLine();
            
            if(medicalHistory.hasNext()){
            text="";
            line=medicalHistory.nextLine();
            while(!line.equals("***")){
                    text+=EncryptDecrypt.decrypt( line)+"\n";
                    line=medicalHistory.nextLine();
                jTextPane17.setText(text);
                }
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadPersonalData(String path)throws Exception {
        try {
            Scanner personalDataInput=new Scanner(new File(path+"personaldata.txt"));
            personalDataInput.nextLine();
            jTextArea7.append("Név: " +EncryptDecrypt.decrypt( personalDataInput.nextLine()) + "\n\n");
            jTextArea7.append("Anyja neve: " +EncryptDecrypt.decrypt( personalDataInput.nextLine()) + "\n\n");
            jTextArea7.append("Születési hely: " +EncryptDecrypt.decrypt( personalDataInput.nextLine()) + "\n\n");
            jTextArea7.append("Születési időpont: " +EncryptDecrypt.decrypt( personalDataInput.nextLine()) + "\n\n");
            jTextArea7.append("Családi állapot: " +EncryptDecrypt.decrypt( personalDataInput.nextLine()) + "\n\n");
            jTextArea7.append("Foglalkozás: " +EncryptDecrypt.decrypt( personalDataInput.nextLine()) + "\n\n");
            jTextArea7.append("E-mail cím: " +EncryptDecrypt.decrypt( personalDataInput.nextLine()) + "\n\n");
            jTextArea7.append("Telefonszám: " + EncryptDecrypt.decrypt(personalDataInput.nextLine()) + "\n\n");
            jTextArea7.append("Neme: " + EncryptDecrypt.decrypt(personalDataInput.nextLine()) + "\n\n");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadComplaints(String path)throws Exception {
         try {
            Scanner input=new Scanner(new File(path+"complaints.txt"));
            String text="";
            String line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane1.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane7.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane8.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane16.setText(text);
            
            input.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAnamnezis(String path)throws Exception {
        try {
            Scanner input=new Scanner(new File(path+"anamnesis.txt"));
            
            String text="";
            String line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane2.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane3.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane4.setText(text);
            
            
            input.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadManualTherapy(String path)throws Exception{
        try {
            Scanner input=new Scanner(new File(path+"manualtherapy.txt"));
            String text="";
            while(input.hasNext()){
                text+=EncryptDecrypt.decrypt(input.nextLine())+"\n";
            }
            jTextPane18.setText(text);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadPulse(String path)throws Exception {
        try {
            Scanner input=new Scanner(new File(path+"pulse.txt"));
            
            jLabel31.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel32.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel33.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel34.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel35.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel36.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel37.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel38.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel39.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel40.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel41.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel42.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel43.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel44.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel45.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel46.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel47.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel48.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel49.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel50.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel51.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel52.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel53.setText(EncryptDecrypt.decrypt(input.nextLine()));
            jLabel54.setText(EncryptDecrypt.decrypt(input.nextLine()));
            
            String text="";
            String line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt( line)+"\n";
                line=input.nextLine();
            }
            jTextArea2.setText(text);

            
            input.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadDiagnose(String path)throws Exception {
        try {
            Scanner input=new Scanner(new File(path+"diagnose.txt"));
            String text="";
            String line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane40.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane41.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane42.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane43.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane44.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane45.setText(text);
            
            text="";
            line=input.nextLine();
            while(!line.equals("***")){
                text+=EncryptDecrypt.decrypt(line)+"\n";
                line=input.nextLine();
            }
            jTextPane46.setText(text);
            
            
            
            input.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadTongue(String path)throws Exception {
        try {
            Scanner input=new Scanner(new File(path+"tongue.txt"));
            String text="";
            while(input.hasNext()){
                text+=EncryptDecrypt.decrypt(input.nextLine())+"\n";
            }
            jTextPane5.setText(text);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        BufferedImage img=null;   
        Image dimg=null;
        try{
            String imageString="";
            Scanner input=new Scanner(new File(Controller.controller.path+idNumber+File.separatorChar+"tongueencodedImage.txt"));
            
            while(input.hasNext()){
                imageString+=input.nextLine();
            }
            img=EncryptDecrypt.decodeToImage(imageString);
            //img=ImageIO.read(new File(path+"tongue.jpg"));
            dimg = img.getScaledInstance(jLabel55.getWidth(), jLabel55.getHeight(),
            Image.SCALE_SMOOTH);
            ImageIcon icon=new ImageIcon(dimg);
            jLabel55.setIcon(icon);
        }catch(Exception e){
                //Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, e);
            img=ImageIO.read(new File(path+"tongue.jpg"));
            dimg = img.getScaledInstance(jLabel55.getWidth(), jLabel55.getHeight(),
            Image.SCALE_SMOOTH);
            ImageIcon icon=new ImageIcon(dimg);
            jLabel55.setIcon(icon);
        }
        
        ImageIcon icon=new ImageIcon(dimg);
        jLabel55.setIcon(icon);
    }

    private void loadEar(String path) throws Exception{
        try {
            Scanner input=new Scanner(new File(path+"ear.txt"));
            String text="";
            while(input.hasNext()){
                text+=EncryptDecrypt.decrypt(input.nextLine())+"\n";
            }
            jTextPane6.setText(text);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        BufferedImage img=null;   
        Image dimg=null;
        try{
            String imageString="";
            Scanner input=new Scanner(new File(Controller.controller.path+idNumber+File.separatorChar+"earencodedImage.txt"));
            
            while(input.hasNext()){
                imageString+=input.nextLine();
            }
            img=EncryptDecrypt.decodeToImage(imageString);
            //img=ImageIO.read(new File(path+"ear.jpg"));
            dimg = img.getScaledInstance(jLabel56.getWidth(), jLabel56.getHeight(),
            Image.SCALE_SMOOTH);
            ImageIcon icon=new ImageIcon(dimg);
            jLabel56.setIcon(icon);
        }catch(Exception e){
                //Logger.getLogger(ManageMain.class.getName()).log(Level.SEVERE, null, e);
            img=ImageIO.read(new File(path+"ear.jpg"));
            dimg = img.getScaledInstance(jLabel56.getWidth(), jLabel56.getHeight(),
            Image.SCALE_SMOOTH);
            ImageIcon icon=new ImageIcon(dimg);
            jLabel56.setIcon(icon);
        }
        
        ImageIcon icon=new ImageIcon(dimg);
        jLabel56.setIcon(icon);
    }

    private void loadTreatments(String path) throws Exception {
        File folder = new File(path+"Treatments");
		File[] listOfFiles = folder.listFiles();
                    if(listOfFiles.length>0){
                    for(int i = 1; i < listOfFiles.length+1; i++){
                        treatments.add(new Treatment());
                        Treatment currentTreatment=treatments.get(idx);
                        jTabbedPane3.addTab(Integer.toString(idx+1), currentTreatment);
                        currentTreatment.load(i, path);
                        idx++;
                    }
                }
        jTabbedPane3.setSelectedIndex(idx);
       
    }

    private void loadFinalReport(String path)throws Exception {
        Scanner input=null;
        String text="";
        try {
            input=new Scanner(new File(path+"finalreport.txt"));
        } catch (FileNotFoundException ex) {
            System.out.println("There is no final report.");
        }
        
        String line=input.nextLine();
        while(!line.equals("***")){
            text+=EncryptDecrypt.decrypt(line);
            line=input.nextLine();
        }
        jLabel64.setText(text);
        
        text="";
        line=input.nextLine();
        while(!line.equals("***")){
            text+=EncryptDecrypt.decrypt(line)+"\n";
            line=input.nextLine();
        }
        if(!text.equals("\n")){
            jTextArea1.setText(text);
        }
        
        line=input.nextLine();
        jComboBox1.setSelectedItem(line);
    }
    
    private void addTreatment(){
        treatments.add(new Treatment());
        Treatment currentTreatment=treatments.get(idx);
        
        jTabbedPane3.addTab(Integer.toString(idx+1), currentTreatment);
        idx++;
        jTabbedPane3.setSelectedIndex(idx);
        currentTreatment.setFocus();
    }

    private void saveFinalReport() throws Exception{
        PrintWriter writer = null;
        
            File file = new File(Controller.controller.path+idNumber+File.separatorChar+"finalreport.txt");
        try {
            writer = new PrintWriter(file);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Treatment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        writer.println(EncryptDecrypt.encrypt(jLabel64.getText().trim()));
        writer.println("***");
        writer.println(EncryptDecrypt.encrypt(jTextArea1.getText().trim()));
        writer.println("***");
        writer.println(jComboBox1.getSelectedItem().toString().trim());
        writer.println("***");
        
        writer.close();
    }

    void setdate(String date) {
        jLabel64.setText(date);
    }
}
